---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: httpqueryresources.konnektr.io
spec:
  group: konnektr.io
  names:
    kind: HTTPQueryResource
    listKind: HTTPQueryResourceList
    plural: httpqueryresources
    singular: httpqueryresource
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Polling interval
      jsonPath: .spec.pollInterval
      name: Interval
      type: string
    - description: Last successful poll time
      jsonPath: .status.lastPollTime
      name: Last Poll
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HTTPQueryResource is the Schema for the httpqueryresources API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: HTTPQueryResourceSpec defines the desired state of HTTPQueryResource
            properties:
              http:
                description: HTTP request details.
                properties:
                  authenticationRef:
                    description: Authentication details.
                    properties:
                      apikeyHeader:
                        description: Header name for API key authentication. Defaults
                          to "X-API-Key".
                        type: string
                      apikeyKey:
                        description: Key within the Secret for the API key. Defaults
                          to "apikey".
                        type: string
                      clientIdKey:
                        description: Key within the Secret for OAuth2 client ID. Defaults
                          to "clientId".
                        type: string
                      clientSecretKey:
                        description: Key within the Secret for OAuth2 client secret.
                          Defaults to "clientSecret".
                        type: string
                      name:
                        description: Name of the Secret containing authentication
                          details.
                        type: string
                      namespace:
                        description: Namespace of the Secret. Defaults to the namespace
                          of the HTTPQueryResource.
                        type: string
                      passwordKey:
                        description: Key within the Secret for the password (basic
                          auth). Defaults to "password".
                        type: string
                      scopes:
                        description: OAuth2 scopes to request (space-separated). Optional.
                        type: string
                      tokenKey:
                        description: Key within the Secret for the token (bearer auth).
                          Defaults to "token".
                        type: string
                      tokenUrl:
                        description: OAuth2 token endpoint URL for client credentials
                          flow.
                        type: string
                      type:
                        description: 'Type of authentication. Supported: basic, bearer,
                          apikey, oauth2'
                        enum:
                        - basic
                        - bearer
                        - apikey
                        - oauth2
                        type: string
                      usernameKey:
                        description: Key within the Secret for the username (basic
                          auth). Defaults to "username".
                        type: string
                    required:
                    - name
                    - type
                    type: object
                  body:
                    description: Request body for POST/PUT/PATCH requests. Can be
                      a Go template.
                    type: string
                  headers:
                    additionalProperties:
                      type: string
                    description: HTTP headers to include in the request.
                    type: object
                  method:
                    default: GET
                    description: HTTP method. Defaults to GET.
                    enum:
                    - GET
                    - POST
                    - PUT
                    - PATCH
                    - DELETE
                    type: string
                  responsePath:
                    description: |-
                      JSONPath expression to extract array data from response. Defaults to "$" (root).
                      Use this when the API response is not directly an array.
                      Example: "$.data" if response is {"data": [...]}
                    type: string
                  url:
                    description: URL for the HTTP request.
                    pattern: ^https?://.+
                    type: string
                required:
                - url
                type: object
              pollInterval:
                description: |-
                  PollInterval defines how often to make the HTTP request and reconcile resources.
                  Format is a duration string like "5m", "1h", "30s".
                pattern: ^([0-9]+(\.[0-9]+)?(ns|us|Âµs|ms|s|m|h))+$
                type: string
              prune:
                default: true
                description: |-
                  Prune determines if resources previously created by this CR but no longer corresponding
                  to an item in the latest HTTP response should be deleted. Defaults to true.
                type: boolean
              statusUpdate:
                description: StatusUpdate defines how to update status via HTTP requests.
                properties:
                  authenticationRef:
                    description: Authentication details for status updates.
                    properties:
                      apikeyHeader:
                        description: Header name for API key authentication. Defaults
                          to "X-API-Key".
                        type: string
                      apikeyKey:
                        description: Key within the Secret for the API key. Defaults
                          to "apikey".
                        type: string
                      clientIdKey:
                        description: Key within the Secret for OAuth2 client ID. Defaults
                          to "clientId".
                        type: string
                      clientSecretKey:
                        description: Key within the Secret for OAuth2 client secret.
                          Defaults to "clientSecret".
                        type: string
                      name:
                        description: Name of the Secret containing authentication
                          details.
                        type: string
                      namespace:
                        description: Namespace of the Secret. Defaults to the namespace
                          of the HTTPQueryResource.
                        type: string
                      passwordKey:
                        description: Key within the Secret for the password (basic
                          auth). Defaults to "password".
                        type: string
                      scopes:
                        description: OAuth2 scopes to request (space-separated). Optional.
                        type: string
                      tokenKey:
                        description: Key within the Secret for the token (bearer auth).
                          Defaults to "token".
                        type: string
                      tokenUrl:
                        description: OAuth2 token endpoint URL for client credentials
                          flow.
                        type: string
                      type:
                        description: 'Type of authentication. Supported: basic, bearer,
                          apikey, oauth2'
                        enum:
                        - basic
                        - bearer
                        - apikey
                        - oauth2
                        type: string
                      usernameKey:
                        description: Key within the Secret for the username (basic
                          auth). Defaults to "username".
                        type: string
                    required:
                    - name
                    - type
                    type: object
                  bodyTemplate:
                    description: Go template for the request body. Receives the resource
                      data.
                    type: string
                  headers:
                    additionalProperties:
                      type: string
                    description: HTTP headers to include in the status update request.
                    type: object
                  method:
                    default: PATCH
                    description: HTTP method for status updates. Defaults to PATCH.
                    enum:
                    - POST
                    - PUT
                    - PATCH
                    - DELETE
                    type: string
                  url:
                    description: URL for the status update HTTP request. Can be a
                      Go template.
                    type: string
                required:
                - bodyTemplate
                - url
                type: object
              template:
                description: |-
                  Go template string for the Kubernetes resource to be created for each item.
                  The template will receive a map[string]interface{} named `Item` representing the JSON object.
                  Field names are the keys in the map.
                minLength: 1
                type: string
            required:
            - http
            - pollInterval
            - template
            type: object
          status:
            description: HTTPQueryResourceStatus defines the observed state of HTTPQueryResource
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the resource's state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastPollTime:
                description: LastPollTime records when the HTTP endpoint was last
                  successfully queried.
                format: date-time
                type: string
              managedResources:
                description: ManagedResources lists the resources currently managed
                  by this CR.
                items:
                  type: string
                type: array
              observedGeneration:
                description: ObservedGeneration reflects the generation of the CR
                  spec that was last processed.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
